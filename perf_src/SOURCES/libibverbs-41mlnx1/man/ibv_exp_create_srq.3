.\" -*- nroff -*-
.\"
.TH IBV_EXP_CREATE_SRQ 3 2017-05-07 libibverbs "Libibverbs Programmer's Manual"
.SH "NAME"
ibv_exp_create_srq \- create a a shared receive queue (SRQ)
.SH "SYNOPSIS"
.nf
.B #include <infiniband/verbs_exp.h>
.sp
.BI "struct ibv_cq *ibv_exp_create_srq(struct ibv_context" " *context" ", struct ibv_exp_create_srq_attr" " *attr");
.SH "DESCRIPTION"
.fi
.B ibv_exp_create_srq()
creates a shared receive queue (SRQ). The argument
.I attr
is an ibv_exp_create_srq_attr struct, as defined in <infiniband/verbs_exp.h>.
.PP
.nf
struct ibv_exp_create_srq_attr {
.in +8
struct ibv_srq_init_attr     base;      /* SRQ attributes */
enum ibv_exp_srq_type        srq_type;  /* Basic / XRC / tag matching */
struct ibv_pd               *pd;        /* PD associated with the SRQ */
uint32_t                     comp_mask; /* Identifies valid fields. Use enum ibv_exp_create_srq_comp_mask */
struct ibv_cq               *cq;        /* CQ to associate with the SRQ */
struct ibv_xrcd             *xrcd;      /* XRC domain to associate with the SRQ */
struct ibv_exp_tm_cap        tm_cap;    /* Tag matching attributes */
struct ibv_exp_mp_wr         mp_wr;     /* Multi-Packet WR attributes */
.in -8
};

struct ibv_exp_mp_wr {
.in +8
       uint8_t log_num_of_strides; /* Log2 number of strides per a MP WR */
       uint8_t log_stride_size;    /* Log2 stride size */
.in -8
};

struct ibv_exp_tm_cap {
.in +8
	uint32_t		max_num_tags;  /* Tag matching list size */
	uint32_t		max_ops;       /* Number of outstanding tag list operations */
.in -8
};
.fi

.SH "RETURN VALUE"
.B ibv_exp_create_srq()
returns a pointer to the SRQ, or NULL if the request fails.
.SH "SEE ALSO"
.BR ibv_exp_post_srq_ops (3)
.SH "AUTHORS"
.TP
Artemy Kovalyov <artemyko@gmail.com>
.TP
Guy Levi <guyle@mellanox.com>
